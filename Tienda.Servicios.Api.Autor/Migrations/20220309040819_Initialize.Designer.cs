// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using Tienda.Servicios.Api.Autor.Persistencia;

#nullable disable

namespace Tienda.Servicios.Api.Autor.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20220309040819_Initialize")]
    partial class Initialize
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Tienda.Servicios.Api.Autor.Modelos.AutorLibro", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Apellido")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<Guid>("AutorLibroGuid")
                        .HasColumnType("uuid");

                    b.Property<DateTime?>("FechaNamcimiento")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("AutorLibros");
                });

            modelBuilder.Entity("Tienda.Servicios.Api.Autor.Modelos.GradoAcademico", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid>("AutorLibroId")
                        .HasColumnType("uuid");

                    b.Property<string>("CentroAcademico")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime?>("FechaGrado")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("GradoAcademicoId")
                        .HasColumnType("uuid");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("AutorLibroId");

                    b.ToTable("GradoAcademicos");
                });

            modelBuilder.Entity("Tienda.Servicios.Api.Autor.Modelos.GradoAcademico", b =>
                {
                    b.HasOne("Tienda.Servicios.Api.Autor.Modelos.AutorLibro", "AutorLibro")
                        .WithMany("GradoAcademicos")
                        .HasForeignKey("AutorLibroId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AutorLibro");
                });

            modelBuilder.Entity("Tienda.Servicios.Api.Autor.Modelos.AutorLibro", b =>
                {
                    b.Navigation("GradoAcademicos");
                });
#pragma warning restore 612, 618
        }
    }
}
